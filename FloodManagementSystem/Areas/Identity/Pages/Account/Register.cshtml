@page
@model RegisterModel
@using Newtonsoft.Json;
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>
<div class="container">
    <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
        <h4>Create a new account.</h4>
        <hr />
        <div class="row">
            <div asp-validation-summary="All" class="text-danger"></div>
        </div>
        <div class="row">

           
            <div class="col-md-4">

                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.ConfirmPassword"></label>
                    <input asp-for="Input.ConfirmPassword" class="form-control" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.FirstName"></label>
                    <input asp-for="Input.FirstName" class="form-control" />
                    <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.LastName"></label>
                    <input asp-for="Input.LastName" class="form-control" />
                    <span asp-validation-for="Input.LastName" class="text-danger"></span>
                </div>


            </div>
            <div class="offset-md-2 col-md-4">
                <div class="form-group">
                    <label asp-for="Input.PhoneNumber"></label>
                    <input asp-for="Input.PhoneNumber" class="form-control" />
                    <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Input.State"></label>
                    <select asp-for="Input.State"
                            asp-items="@(new SelectList(Model.StatesList,"Id","Name")) " class="form-control">
                        <option>Please select one</option>
                    </select>
                    <span asp-validation-for="Input.State" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.City"></label>
                    <select asp-for="Input.City" class="form-control" name="Input.City">
                        <option>Please select one</option>
                    </select>
                    <span asp-validation-for="Input.City" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Input.Region"></label>
                    <select asp-for="Input.Region" class="form-control" name="Input.Region">
                        <option>Please select one</option>
                    </select>
                    <span asp-validation-for="Input.Region" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <button type="submit" class="btn btn-primary">Register</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(function () {

            var cities = @Html.Raw(JsonConvert.SerializeObject(Model.CityList, Formatting.Indented, new JsonSerializerSettings
                    {
                        PreserveReferencesHandling = PreserveReferencesHandling.Objects
                    }) as String);

            var regions = @Html.Raw(JsonConvert.SerializeObject(Model.RegionList, Formatting.Indented, new JsonSerializerSettings
                     {
                         PreserveReferencesHandling = PreserveReferencesHandling.Objects
                     }) as String);
            $('#Input_State').on('change', function () {
                $('#Input_City').html('<option>Please select one</option>')
                $('#Input_Region').html('<option>Please select one</option>')
                var value = $('#Input_State').val();
                if (value > 0)
                {
                    $.each(cities, function () {
                         if (this.StateId == value)
                        {
                            $('#Input_City').append('<option value="' + this.Id + '">' + this.City + '</option>');
                        }
                    })

                }
            })

            $('#Input_City').on('change', function () {
                $('#Input_Region').html('<option>Please select one</option>')
                var value = $('#Input_City').val();
                if (value > 0) {
                    $.each(regions, function () {
                        if (this.CityId == value) {
                            $('#Input_Region').append('<option value="' + this.Id + '">' + this.Region + '</option>');
                        }
                    })
                }
            })
        });

    </script>
}
